[
  {
    "ContainingType": "MyApplication.Controllers.UserAccountController",
    "Method": "ActivateInactiveUsers",
    "RelativePath": "api/UserAccount/ActivateInactiveUsers",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "isActive",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MyApplication.Controllers.UserAccountController",
    "Method": "AuthenticateAsync",
    "RelativePath": "api/UserAccount/authenticate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MyApplication.Application.Models.Authentication.AuthenticationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MyApplication.Application.Models.Authentication.AuthenticationResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MyApplication.Controllers.UserAccountController",
    "Method": "CreateRole",
    "RelativePath": "api/UserAccount/CreateRole",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MyApplication.Controllers.UserAccountController",
    "Method": "ForgetPasswordAsync",
    "RelativePath": "api/UserAccount/forgetpassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "emailaddress",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MyApplication.Application.Models.Authentication.RegistrationResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MyApplication.Controllers.UserAccountController",
    "Method": "GetAllUsers",
    "RelativePath": "api/UserAccount/getallusers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MyApplication.Controllers.UserAccountController",
    "Method": "RegisterAsync",
    "RelativePath": "api/UserAccount/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MyApplication.Application.Models.Authentication.RegistrationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MyApplication.Application.Models.Authentication.RegistrationResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MyApplication.Controllers.UserAccountController",
    "Method": "ResetPasswordAsync",
    "RelativePath": "api/UserAccount/resetpassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "passwordResetRequest",
        "Type": "MyApplication.Application.Models.Authentication.PasswordResetRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MyApplication.Application.Models.Authentication.RegistrationResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]